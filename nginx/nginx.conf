# jumlah processor yang dipake
worker_processes 1;

# error logging, kalian bisa ubah ke crit atau info
error_log /var/log/nginx-error.log info;

events {
    # ini adalah worker connection atau jumlah maximal tampungan client yang bisa koneksi ke nginx
    worker_connections 1024;
}

http {
    load_module modules/ngx_http_modsecurity_module.so
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsec/main.conf;

    # ini untuk set maximal body yang bisa dikirim ke nginx
    # biasanya ini untuk method POST a.k.a mengirim data ke server
    client_max_body_size 600M;

    # ini waktu untuk time to live sifatnya dia per second
    keeaplive_timeout 180;

    # ini untuk mengatur buffer body size
    # ini lebih spesifik ke satu client secara default itu 8k
    client_body_buffer_size 1k;

    # ini untuk mengatur buffer dari header size
    # sama hal nya dengan body buffer size ini spesifik ke satu client
    client_header_buffer_size 1k;

    server_tokens off;
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

     # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

